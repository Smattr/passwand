task:

  # only test the main branch and pull requests
  only_if: $CIRRUS_BRANCH == "main" || $CIRRUS_PR != ""

  matrix:
    - name: FreeBSD
      freebsd_instance:
        image_family: freebsd-14-0-snap
      install_script: pkg upgrade -y && pkg install -y base64 cmake cunit json-c openssl pkgconf vim && sudo python3 -m ensurepip && sudo python3 -m pip install pexpect && mkdir scrypt-build && cd scrypt-build && curl https://www.tarsnap.com/scrypt/scrypt-1.3.0.tgz -o scrypt-1.3.0.tgz && tar xf scrypt-1.3.0.tgz && cd scrypt-1.3.0 && ./configure --enable-libscrypt-kdf && make && sudo make install && cd ../..
      test_script: uname -sr && python3 --version && mkdir build && cd build && cmake .. && cmake --build . -- pw-cli pw-gui-test-stub passwand-tests && cmake --build . -- check && sudo cmake --build . -- install

    - name: Linux, GCC, no GTK
      container:
        image: gcc:12.1
      environment:
        DEBIAN_FRONTEND: noninteractive
        CFLAGS: -Werror -g -fno-omit-frame-pointer -fsanitize=address,undefined -fno-sanitize-recover=undefined -fuse-ld=gold
        # $LANG and $LC_* are not set by default in this images, so force
        # $LC_ALL to make `man` work correctly
        LC_ALL: C
        UBSAN_OPTIONS: print_stacktrace=1
      install_script: apt-get update -y && apt-get install --no-install-recommends -y cmake libcunit1-dev libjson-c-dev libscrypt-kdf1 libscrypt-kdf-dev man-db python3-pexpect xxd
      test_script: uname -sr && python3 --version && mkdir build && cd build && cmake .. && cmake --build . -- pw-cli pw-gui-test-stub passwand-tests && cmake --build . -- check && cmake --build . -- install

    - name: Linux, GCC, GTK 2
      container:
        image: gcc:12.1
      environment:
        DEBIAN_FRONTEND: noninteractive
        CFLAGS: -Werror -g -fno-omit-frame-pointer -fsanitize=address,undefined -fno-sanitize-recover=undefined -fuse-ld=gold -Wno-deprecated-declarations
        # $LANG and $LC_* are not set by default in this images, so force
        # $LC_ALL to make `man` work correctly
        LC_ALL: C
        UBSAN_OPTIONS: print_stacktrace=1
      install_script: apt-get update -y && apt-get install --no-install-recommends -y cmake libcunit1-dev libgtk2.0-dev libjson-c-dev libscrypt-kdf1 libscrypt-kdf-dev man-db python3-pexpect xxd
      test_script: uname -sr && python3 --version && mkdir build && cd build && cmake .. && cmake --build . -- pw-cli pw-gui-test-stub pw-gui passwand-tests test-type && cmake --build . -- check && cmake --build . -- install

    - name: Linux, GCC, GTK 3
      container:
        image: gcc:12.1
      environment:
        DEBIAN_FRONTEND: noninteractive
        CFLAGS: -Werror -g -fno-omit-frame-pointer -fsanitize=address,undefined -fno-sanitize-recover=undefined -fuse-ld=gold -Wno-deprecated-declarations
        # $LANG and $LC_* are not set by default in this images, so force
        # $LC_ALL to make `man` work correctly
        LC_ALL: C
        UBSAN_OPTIONS: print_stacktrace=1
      install_script: apt-get update -y && apt-get install --no-install-recommends -y cmake libcunit1-dev libgtk-3-dev libjson-c-dev libscrypt-kdf1 libscrypt-kdf-dev man-db python3-pexpect xxd
      test_script: uname -sr && python3 --version && mkdir build && cd build && cmake .. && cmake --build . -- pw-cli pw-gui-test-stub pw-gui passwand-tests test-type && cmake --build . -- check && cmake --build . -- install

    - name: macOS
      osx_instance:
        image: monterey-xcode-13.3
      environment:
        CFLAGS: -I/usr/local/opt/openssl/include -I/usr/local/include -g
        LDFLAGS: -L/usr/local/opt/openssl/lib -L/usr/local/lib
        PKG_CONFIG_PATH: /usr/local/opt/openssl/lib/pkgconfig
      install_script: brew update && brew install cunit json-c openssl && sudo pip3 install pexpect && mkdir scrypt-build && cd scrypt-build && curl https://www.tarsnap.com/scrypt/scrypt-1.3.0.tgz -o scrypt-1.3.0.tgz && tar xf scrypt-1.3.0.tgz && cd scrypt-1.3.0 && ./configure --enable-libscrypt-kdf && make && sudo make install && cd ../..
      test_script: uname -sr && python3 --version && mkdir build && cd build && cmake .. && cmake --build . -- pw-cli pw-gui-test-stub pw-gui passwand-tests test-type && cmake --build . -- check && sudo cmake --build . -- install

    - name: clang-format
      container:
        image: silkeh/clang:14
      test_script: git ls-files -z '**/*.c' '**/*.h' | xargs -0 -- clang-format --dry-run --style=file --Werror
